#!/usr/bin/sh
#
# Adormidera Organization
################################################################################

# Sourcing init vars
ARF_SCRIPT_DIR=$(cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd)
source $ARF_SCRIPT_DIR/init.vars


# Icon

# Run
ICON_BATTERY_NOT_FOUND="\uf00d \uf240"
ICON_CHARGING="\uf0e7"
ICON_PLUGGED_IN="\uf1e6"
ICON_BATTERY_USE="\uf240"
ICON_BATTERY_USE_FULL="\uf240"
ICON_BATTERY_USE_3_4="\uf241"
ICON_BATTERY_USE_1_2="\uf242"
ICON_BATTERY_USE_1_4="\uf243"
ICON_BATTERY_USE_EMPTY="\uf244"
ICON_BATTERY_UNKNOWN="\uf128"
POWER_DIR="/sys/class/power_supply"
BATTERY_DIR="$POWER_DIR/BAT0"
AC_DIR="$POWER_DIR/AC"


# Check if AC is connected
if [[ -d $AC_DIR ]]; then
  if [[ $(cat /sys/class/power_supply/AC/online) -eq 1 ]]; then
    AC_CONNECTED="\uf1e6 "
  fi
else
  AC_CONNECTED=""
fi


# Getting values
if [[ -d $BATTERY_DIR ]]; then
  CAPACITY="$(cat $BATTERY_DIR/capacity)"
  STATUS="$(cat $BATTERY_DIR/status)"
  # TODO: Addapt if ENERGY_NOW doesn't exists. Ref: https://github.com/i3/i3status/blob/main/src/print_battery_info.c
  ENERGY="$(cat $BATTERY_DIR/energy_now)"
  POWER="$(cat $BATTERY_DIR/power_now)"
  FULL="$(cat $BATTERY_DIR/energy_full)"

  if [[ $CAPACITY -gt 95 ]]; then
    BATERY_ICON="$ICON_BATTERY_USE_FULL"
  elif [[ $CAPACITY -gt 75 ]]; then
    BATERY_ICON="$ICON_BATTERY_USE_3_4"
  elif [[ $CAPACITY -gt 50 ]]; then
    BATERY_ICON="$ICON_BATTERY_USE_1_2"
  elif [[ $CAPACITY -gt 25 ]]; then
    BATERY_ICON="$ICON_BATTERY_USE_1_4"
  elif [[ $CAPACITY -le 25 ]]; then
    BATERY_ICON="$ICON_BATTERY_USE_EMPTY"
  fi
  
  if [[ "$STATUS" == "Charging" ]]; then
    # SecsRemaining = 3600 * mWh / microAh
    SECONDS_REMAINING=$(echo "scale=8; 3600*($FULL - $ENERGY)/$POWER" | bc)
    AC_CONNECTED+="$ICON_CHARGING "
  elif [[ "$STATUS" == "Discharging" ]]; then
    # SecsRemaining = 3600 * (mWh - mWh) / microAh
    SECONDS_REMAINING=$(echo "scale=8; 3600*$ENERGY/$POWER" | bc)
  fi
  REMAINING=$(date -u +%H:%M:%S -d@$SECONDS_REMAINING)
fi

# Checking for Batery icon
  


# Printing
if echo "$CAPACITY > $ARF_ERR_LIMIT" | bc -l | grep -q 1; then
  COLOR="color=\"$ARF_ERR_COLOR\""
elif echo "$CAPACITY > $ARF_WARN_LIMIT" | bc -l | grep -q 1; then
  COLOR="color=\"$ARF_WARN_COLOR\""
else
  COLOR="color=\"$ARF_OK_COLOR\""
fi

if [[ "$BLOCK_BUTTON" -eq "$ARF_LEFT_CLICK" ]]; then
  OUTPUT="<span $COLOR font=\"FontAwesome\">$ARF_ICON </span><span color=\"#EBD203\">$AC_CONNECTED</span><span $COLOR>$BATERY_ICON [$REMAINING]($CAPACITY%)</span>"
else            
  OUTPUT="<span $COLOR font=\"FontAwesome\">$ARF_ICON </span><span color=\"#EBD203\">$AC_CONNECTED</span><span $COLOR>$BATERY_ICON ($CAPACITY%)</span>"
fi

echo -e "$OUTPUT"
