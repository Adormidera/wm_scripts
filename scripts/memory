#!/usr/bin/sh
#
# Adormidera Organization
################################################################################

# Sourcing init vars
ARF_SCRIPT_DIR=$(cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd)
source $ARF_SCRIPT_DIR/init.vars


# Icon
ARF_ICON="${ARF_ICON:=ï‹›}"


# Run
TYPE="${TYPE:-mem}"
awk \
  -v type=$TYPE \
  -v arf_icon=$ARF_ICON \
  -v arf_warn_limit=$ARF_WARN_LIMIT \
  -v arf_err_limit=$ARF_ERR_LIMIT \
  -v arf_ok_color=$ARF_OK_COLOR \
  -v arf_warn_color=$ARF_WARN_COLOR \
  -v arf_err_color=$ARF_ERR_COLOR \
  -v block_button=$BLOCK_BUTTON \
  -v arf_left_click=$ARF_LEFT_CLICK \
'
/^MemTotal:/ {
	mem_total=$2
}
/^MemFree:/ {
	mem_free=$2
}
/^Buffers:/ {
	mem_free+=$2
}
/^Cached:/ {
	mem_free+=$2
}
/^SwapTotal:/ {
	swap_total=$2
}
/^SwapFree:/ {
	swap_free=$2
}
END {
	if (type == "swap") {
		free=swap_free/1024/1024
		used=(swap_total-swap_free)/1024/1024
		total=swap_total/1024/1024
	} else {
		free=mem_free/1024/1024
		used=(mem_total-mem_free)/1024/1024
		total=mem_total/1024/1024
	}

  # Calculating %
	pct=0
	if (total > 0) {
		pct=used/total*100
	}

  # Checking thresholds
	if (pct > arf_err_limit) {
		color=arf_err_color
	} else if (pct > arf_warn_limit) {
		color=arf_warn_color
	} else {
		color=arf_ok_color
	}

  # Printing
	if (block_button == arf_left_click) {
		printf("<span color=\"%s\">%s %.1fG/%.1fG (%.f%%)</span>\n", color, arf_icon, used, total, pct)
	}

	printf("<span color=\"%s\">%s %.f%%</span>\n", color, arf_icon, pct)
}
' /proc/meminfo
